{
  "version": 3,
  "sources": [
    "friends_quotes/core.cljs"
  ],
  "mappings": ";AAMA,AAAA,AAAAA,AAAAC,AAAAC;AAAA;AAAA,AAAA,AAASC,AAAU,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC;;AAGpB,AAAA,AAAMC,AAAaC;AAAnB,AACE,AAAA,AAAA,AAAA,AAACC,AACW,AAAKC;AAAL,AACE,AAAA,AAACC,AAAMH,AAAMI,AAAc,AAAA,AAACC,AAAIH;;AAChC,AAAA,AAACC,AAAMH,AAAMI,AAAY,AAAA,AAACC,AAAIH;AAH5C,AAIkB,AAAAI;AAAA,AAAA,AAAAC,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAF,AAAAE,AAAA,AAAaI;AAAb,AAAAN,AAAAE,AAAA,AAAoBK;AAApB,AACE,AAACC,AAAeF,AAAOC;;;AAE7C,AAAA,AAAME,AAAYd;AAAlB,AACE,AAAA,AAAA,AAAoE,AAAA,AAAA,AAAAe,AAAQf,AAAa,AAAA,AAAA,AAAAe,AAAUf;;AAErG,AAAA,AAAMgB,AAAOhB;AAAb,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAIoB,AAAA,AAAA,AAAAe,AAAQf,AACD,AAAA,AAAA,AAAAe,AAAUf,AAGpB,AAACc,AAAWd;AAR7B,AAU2B,AAACD,AAAYC;AAVxC;;AAYA,AAAA,AAAMiB;AAAN,AACE,AAAAC,AAAA,AAA2BF,AAAMnB;AAAjCsB,AAC0B,AAAA,AAAGE;AAD7B,AAAA,AAAAH,AAAAC,AAAAD,AAAAC,AAACC,AAAAA,AAAAA;;AAGH,AAAA,AAAeE;AAAf,AAIE,AAACL;;;AAEH,AAAA,AAAMM;AAAN,AAGE,AAAA,AAACV;;AAEH,AAACd,AAAYF",
  "names": [
    "js/friends-quotes",
    "js/friends-quotes.core",
    "js/friends-quotes.core.app-state",
    "friends-quotes.core/app-state",
    "reagent.core.atom",
    "friends-quotes.core/fetch-link!",
    "state",
    "ajax.core.GET",
    "data",
    "cljs.core.swap_BANG_",
    "cljs.core/assoc",
    "cljs.core.get",
    "p__44129",
    "map__44130",
    "cljs.core/PROTOCOL_SENTINEL",
    "cljs.core.apply",
    "cljs.core/hash-map",
    "status",
    "status-text",
    "js/console.log",
    "friends-quotes.core/tweet-link",
    "cljs.core/deref",
    "friends-quotes.core/quote",
    "friends-quotes.core/start",
    "G__44132",
    "G__44133",
    "reagent.core/render-component",
    "js/document",
    "friends-quotes.core/init",
    "friends-quotes.core/stop"
  ],
  "sourcesContent": [
    "(ns friends-quotes.core\n  (:require [ajax.core :refer [GET]]\n            [reagent.core :as reagent :refer [atom]]))\n\n;; define your app data so that it doesn't get over-written on reload\n\n(defonce app-state (atom {:text \"Hello world!\"\n                          :author \"Rita Lino\"}))\n\n(defn fetch-link! [state]\n  (GET \"https://friends-quotes-api.herokuapp.com/quotes/random\"\n    {:handler (fn [data]\n                (swap! state assoc :author (get data \"character\"))\n                (swap! state assoc :text (get data \"quote\")))\n     :error-handler (fn [{:keys [status status-text]}]\n                      (js/console.log status status-text))}))\n\n(defn tweet-link [state]\n  (str \"https://twitter.com/intent/tweet?hashtags=friendsquote&text=\" (:text @state) \" - \" (:author @state)))\n\n(defn quote [state]\n  [:div\n   [:div.frame\n    [:div.quote-container\n     [:p.quote-text (:text @state)]\n     [:p.quote-author \"- \" (:author @state)]\n\n     [:div.action-buttons\n      [:a {:href (tweet-link state)\n           :target \"_blank\"} \"Tweet!\"]\n      [:button {:on-click #(fetch-link! state)} \"Next Quote\"]]]]])\n\n(defn start []\n  (reagent/render-component [quote app-state]\n                            (. js/document (getElementById \"app\"))))\n\n(defn ^:export init []\n  ;; init is called ONCE when the page loads\n  ;; this is called in the index.html and must be exported\n  ;; so it is available even in :advanced release builds\n  (start))\n\n(defn stop []\n  ;; stop is called before any code is reloaded\n  ;; this is controlled by :before-load in the config\n  (js/console.log \"stop\"))\n\n(fetch-link! app-state)"
  ]
}
